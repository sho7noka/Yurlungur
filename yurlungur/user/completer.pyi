"""this document generated by internal module."""


def capitalize(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def center(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def count(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def decode(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def encode(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def endswith(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def expandtabs(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def find(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def format(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def index(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def isalnum(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def isalpha(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def isdigit(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def islower(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def isspace(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def istitle(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def isupper(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def join(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def ljust(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def lower(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def lstrip(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def partition(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def replace(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rfind(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rindex(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rjust(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rpartition(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rsplit(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def rstrip(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def split(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def splitlines(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def startswith(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def strip(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def swapcase(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def title(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def translate(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def upper(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

def zfill(*args, **kwargs):
   """str(object='') -> string

Return a nice string representation of the object.
If the argument is a string, the return value is the same object."""
   pass

