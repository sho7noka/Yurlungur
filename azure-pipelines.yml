# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- dev

jobs:
  - job: Linux

  pool:
    vmImage: ubuntu-latest

  strategy:
    matrix:
      Python27:
        python.version: '2.7' # back forward
      Python37:
        python.version: '3.7' # latest interpreter
  
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  
  - script: |
      pip install pytest pytest-azurepipelines
      pytest
    displayName: 'pytest'
  
  
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python37:
        python.version: '3.7'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
      
      
  - job: macOS

    pool:
      vmImage: 'macOS-10.15'

    strategy:
      matrix:
        Python27:
          python.version: '2.7'
        Python37:
          python.version: '3.7'

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
        displayName: 'Use Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          pip install pytest pytest-azurepipelines
          pytest
        displayName: 'pytest'


trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  displayName: "Use Python 3.6"
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'

- script: pip install -r source/requirements.txt
  displayName: "Install Python Requirements"

- script: make html
  displayName: "Make"

- task: PublishBuildArtifacts@1
  displayName: "Publish HTML"
  inputs:
    pathToPublish: './build'
    artifactName: 'html'